<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

 <mapper namespace="com.memo.post.dao.PostDAO">
 	<select id="selectPostListByUserId" resultType="com.memo.post.model.Post" parameterType="int">
 		SELECT
 			`id`
 			, `userId`
 			, `subject`
 			, `content`
 			, `imagePath`
 			, `createdAt`
 			, `updatedAt`
 		FROM
 			`post`
 		WHERE
 			`userId` = #{userId}
 		<!-- direction이 null이면 첫페이지 -->
 		<if test="direction == null">	
 		ORDER BY `id` DESC
 		</if>
 		
 		<!-- direction이 next이면 다음 -->
 		<if test="direction == 'next'">
 			<![CDATA[
 			AND `id` < #{standardId}
 			]]>
 		ORDER BY `id` DESC
 		</if>
 		
 		<!-- direction이 prev이면 이전 -->
 		<if test="direction == 'prev'">
 			<![CDATA[
 			AND `id` > #{standardId}
 			]]>
 		ORDER BY `id` ASC
 		</if>
 		
 		LIMIT ${limit}
 	</select>
 	
 	<select id= "selectPostListByUserIdAndSort" parameterType="map" resultType="int">
 		SELECT
 			`id`
 		FROM
 			`post`
 		WHERE
 			`userId` = #{userId}
 		ORDER BY `id`${sort}
 		LIMIT 1
 	</select>
 	
	<select id="selectPostById" parameterType="int" resultType="com.memo.post.model.Post">
		SELECT
 			`id`
 			, `userId`
 			, `subject`
 			, `content`
 			, `imagePath`
 			, `createdAt`
 			, `updatedAt`
 		FROM
 			`post`
 		WHERE
 			`id` = #{id}
	</select>
 	
 	<insert id="inserPost" parameterType="map">
 		INSERT INTO `post`
 		(
 			`userId`
 			, `subject`
 			, `content`
 			, `imagePath`
 			, `createdAt`
 			, `updatedAt`
 		)
 		VALUES
 		(
 			#{userId}
 			, #{subject}
 			, #{content}
 			, #{imagePath}
 			, NOW()
 			, NOW()
 		)
 	</insert>
 	
 	<update id="updatePostByUserIdAndPostId" parameterType="map">
 		UPDATE `post`
 		SET
 			`subject` = #{subject}
 			, `content` = #{content}
 			<!-- imagePath가 있을 때만 수정한다. -->
 			<if test="imagePath != null">, `imagePath` = #{imagePath}</if>
 			, `updatedAt` = NOW()
 		WHERE
 			`id` = #{postId}
 			AND `userId` = 	#{userId}
 	</update>
 	
 	<delete id="deletePostByUserIdAndPostId" parameterType="map">
 		DELETE 
 		FROM
 			`post`
 		WHERE
 			`id` = #{postId}
 			AND `userId` = #{userId}
 	</delete>
 </mapper>